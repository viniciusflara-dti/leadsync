// <auto-generated />
using System;
using LeadSync.Infrastructure.Common;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LeadSync.Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240214155054_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("LeadSync.Domain.Contacts.Contact", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Contacts");

                    b.HasData(
                        new
                        {
                            Id = new Guid("5cd0ab5c-043d-4645-be77-7353345e6b9c"),
                            Email = "billgates@gmail.com",
                            FirstName = "Bill",
                            LastName = "Gates",
                            Phone = "1234567890"
                        },
                        new
                        {
                            Id = new Guid("51d6382c-63dc-48f1-af99-31151071e9ff"),
                            Email = "stevejobs@apple.com",
                            FirstName = "Steve",
                            LastName = "Jobs",
                            Phone = "1234567890"
                        },
                        new
                        {
                            Id = new Guid("cdbaa142-ff4d-4999-8249-1b5f7dbcc9cf"),
                            Email = "elonmusk@spacex.com",
                            FirstName = "Elon",
                            LastName = "Musk",
                            Phone = "1234567890"
                        },
                        new
                        {
                            Id = new Guid("e3370d25-d4f0-473a-8b6a-e7a3f30231cf"),
                            Email = "jeffbezos@amazon.com",
                            FirstName = "Jeff",
                            LastName = "Bezos",
                            Phone = "1234567890"
                        });
                });

            modelBuilder.Entity("LeadSync.Domain.Leads.Lead", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ContactId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("FinalPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("LeadStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Suburb")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ContactId")
                        .IsUnique();

                    b.ToTable("Leads");

                    b.HasData(
                        new
                        {
                            Id = new Guid("b8d2c69c-8794-4efb-8ab1-b82176b331b6"),
                            Category = "Painters",
                            ContactId = new Guid("5cd0ab5c-043d-4645-be77-7353345e6b9c"),
                            DateCreated = new DateTime(2024, 2, 14, 15, 50, 54, 233, DateTimeKind.Utc).AddTicks(2521),
                            Description = "Need to paint 2 aluminum windows and a sliding glass door",
                            FinalPrice = 0m,
                            LeadStatus = "New",
                            Price = 62m,
                            Suburb = "Yanderra 2574"
                        },
                        new
                        {
                            Id = new Guid("77a35649-45a7-40e4-8dbd-43af9e4adea7"),
                            Category = "Interior Painters",
                            ContactId = new Guid("51d6382c-63dc-48f1-af99-31151071e9ff"),
                            DateCreated = new DateTime(2024, 2, 14, 15, 50, 54, 233, DateTimeKind.Utc).AddTicks(2563),
                            Description = "Internal walls 3 colors",
                            FinalPrice = 0m,
                            LeadStatus = "New",
                            Price = 600m,
                            Suburb = "Woolooware 2230"
                        },
                        new
                        {
                            Id = new Guid("db5c97d8-5713-47f0-a504-b24e8c1df952"),
                            Category = "General Building Work",
                            ContactId = new Guid("cdbaa142-ff4d-4999-8249-1b5f7dbcc9cf"),
                            DateCreated = new DateTime(2024, 2, 14, 15, 50, 54, 233, DateTimeKind.Utc).AddTicks(2564),
                            Description = "Plaster exposed brick walls (see photos), square off 2 archways (see photos), and expand pantry (see photos).",
                            FinalPrice = 0m,
                            LeadStatus = "New",
                            Price = 200m,
                            Suburb = "Carramar 6031"
                        },
                        new
                        {
                            Id = new Guid("81efa86c-e990-4f45-8b58-696ac25e041c"),
                            Category = "Home Renovations",
                            ContactId = new Guid("e3370d25-d4f0-473a-8b6a-e7a3f30231cf"),
                            DateCreated = new DateTime(2024, 2, 14, 15, 50, 54, 233, DateTimeKind.Utc).AddTicks(2566),
                            Description = "There is a two story building at the front of the main house that's about 10x5 that would like to convert into self contained living area.",
                            FinalPrice = 0m,
                            LeadStatus = "New",
                            Price = 300m,
                            Suburb = "Quinns Rocks 6030"
                        });
                });

            modelBuilder.Entity("LeadSync.Domain.Leads.Lead", b =>
                {
                    b.HasOne("LeadSync.Domain.Contacts.Contact", "Contact")
                        .WithOne()
                        .HasForeignKey("LeadSync.Domain.Leads.Lead", "ContactId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Contact");
                });
#pragma warning restore 612, 618
        }
    }
}
